my list = ('abcedfghijklmnopqrstuvwxyz')
my  yarr = np.arange(26)
my  dict = dict(zip(my list,myarr))
be =  pd.Series(mydict)

importor numpy as np
 ser1  = pd.Series(list('abcedfghijklmnopqrstuvwxyz')
 ser2 = pd.Series(np.arange(26))
  ser= Series(list('abcedfghijklmnopqrstuvwxyz'))
  
  ser =  pd.Series(np.take(list('abcdefgh')np.random.radint(8, size=30)))
  
  ser =  pd.Series(np.random.radint(1,10,35))

ser=  pd.Seriess(list('abcdefghijklmnopqrstuvwxyz'))
pos =  [0,4,8,14,20]

ser1 = pd.Series (5))
ser2 =  pd.series  (list('abcde'))

ser =  pd.Series([1,3,6,10,15,21,27,35])

[nan,2.0,3.0,4.0,5.0,0.6,0.7,0.8]
[nan,nan, 1.0, 1.0, 1.0,1.0 , 0.0,2.0] 

 df =  pd.read_csv('https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv',usecols=['crim', 'medv'])
      crim  medv
 0 0.00632  42.0
 1  0.02731  21. 6
 2 0.02729 34.7
 3  0.03237 33.4
 4 0.06905  36.2
 
  df = pd.read_csv  ('https://raw.githubusercontent.com/selva86/datasets/master/Cars93_miss.csv')
  # Input
df = pd.read_csv('https://raw.githubusercontent.com/selva86/datasets/master/Cars93_miss.csv')

# Solution
# Get Manufacturer with highest price
df.loc[df.Price == np.max(df.Price), ['Manufacturer', 'Model', 'Type']]

# Get Row and Column number
row, col = np.where(df.values == np.max(df.Price))

# Get the value
df.iat[row[0], col[0]]
df.iloc[row[0], col[0]]

# Alternates
df.at[row[0], 'Price']
df.get_value(row[0], 'Price')

# The difference between `iat` - `iloc` vs `at` - `loc` is:
# `iat` snd `iloc` accepts row and column numbers. 
# Whereas `at` and `loc` accepts index and column names.

df = pd.read_csv('https://raw.githubusercontent.com/selva86/datasets/master/Cars93_miss.csv')
Mostrar solución
# Input
df = pd.read_csv('https://raw.githubusercontent.com/selva86/datasets/master/Cars93_miss.csv')

# Solution
df.isnull().values.any()
df = pd.read_csv('https://raw.githubusercontent.com/selva86/datasets/master/Cars93_miss.csv')
Mostrar solución
# Input
df = pd.read_csv('https://raw.githubusercontent.com/selva86/datasets/master/Cars93_miss.csv')

# Solution
print(df.iloc[::20, :][['Manufacturer', 'Model', 'Type']])
   Manufacturer    Model     Type
0         Acura  Integra    Small
20     Chrysler  LeBaron  Compact
40        Honda  Prelude   Sporty
60      Mercury   Cougar  Midsize
80       Subaru   Loyale    Small
df = pd.DataFrame({'fruit': ['apple', 'banana', 'orange'] * 3,
                   'rating': np.random.rand(9),
                   'price': np.random.randint(0, 15, 9)})

# Input
df = pd.DataFrame({'fruit': ['apple', 'banana', 'orange'] * 3,
                   'rating': np.random.rand(9),
                   'price': np.random.randint(0, 15, 9)})

# Solution
out = df.groupby('fruit', as_index=False)['price'].mean()
print(out)
    fruit      price
0   apple  11.000000
1  banana   6.333333
2  orange   6.333333


